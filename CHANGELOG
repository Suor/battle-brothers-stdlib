2.4
- added Tile.iterAdjacent*() utils
- added Debug.logRepr() and .repr()
- fixed Flags.unpack() when a key is missing
- updated lists of traits: support Legends 19, made brute so-so

2.3
- added Table.filter(), .map(), .mapKeys(), .mapValues() and .apply()
- added Dev utils
- added Util.round()
- allow several arguments for options in Debug.log() and std.debug()
- added Array.cat()
- documented Str.split()
- moved things scripts/config/, so all the stuff is available earlier
- updated play and bench templates
Experimental:
- added Flags.*
- added Iter.chunks() and Iter.toArray()
- list experimental stuff in README

2.2
- added Str.split()
- added Re.escape()
- even safer and faster way to extract regexp matches
- made Player.addTraits() return a list of added traits
- fixed Debug.log(..., null)
- if only Modern Hooks are present then register with them

2.1
- optimized Packer more (1.5x to 2x better compression)
- added Util.isNull(), .isKindOf(), .isIn()
- added a couple of Actor utils
- added Player.addTalents(probs)
- added Table.get()
Experimental - not yet documented:
- added Table.getIn()

2.0
- added Player:
    - giveLevels()
    - rerollTalents(), clearTalents(), addTalents()
    - addTraits()
- optimized Packer, esp. for "typed" arrays and tables
- added Table.setDefaults()
- added Text.ally(), Text.enemy()
- added Debug.noop() and .enabled
- added ::std.rng and ::std.rng_new()
- improve Util.getMember() to handle weakrefs and stuff, make in public
- made Rand.using() available early, i.e. before Util is ready
- added load script
Experimental - not yet documented:
- added Util.isKindOf()
- added Array.findBy()

1.7
- made Debug.pp() and friends work with instances and weakrefs
- documented Rand.int() and Rand.using()
- documented Debug.with()
- added a single param Debug.log()
- fixed Rand.int() passed with floats when using ::rng
- fixed filter not collapsing tables with funcs count
Experimental - not yet documented:
- added Util.getMember()

1.6
- added Util.pack() and .unpack()
- added Table.deepExtend()
- added 3-param Text.plural()
- extended and fixed Debug.pp() and friends:
    - number passed instead of opts means `{depth = number}`
    - string passed instead of opts means `{filter = string}`
    - added `filter` option, only show keys containing this as a substring
    and their values
    - table keys are sorted
    - correctly overwrite all defaults when using `Debug.with()`
    - correctly expand to multiline when having a long `name = ` prefix
    - always show strings and tables with pp the same, no last depth bug
    anymore

1.5
- initial public release

... lost in ancient history ...
